0 info it worked if it ends with ok
1 verbose cli [ '/home/haanj/.node/bin/node',
1 verbose cli   '/home/haanj/.node/bin/npm',
1 verbose cli   'publish' ]
2 info using npm@3.8.2
3 info using node@v4.3.1
4 verbose publish [ '.' ]
5 silly cache add args [ '.', null ]
6 verbose cache add spec .
7 silly cache add parsed spec Result {
7 silly cache add   raw: '.',
7 silly cache add   scope: null,
7 silly cache add   name: null,
7 silly cache add   rawSpec: '.',
7 silly cache add   spec: '/home/haanj/code/401/package-manager',
7 silly cache add   type: 'directory' }
8 verbose addLocalDirectory /home/haanj/.npm/project1/0.1.0/package.tgz not in flight; packing
9 verbose correctMkdir /home/haanj/.npm correctMkdir not in flight; initializing
10 info lifecycle project1@0.1.0~prepublish: project1@0.1.0
11 silly lifecycle project1@0.1.0~prepublish: no script for prepublish, continuing
12 verbose tar pack [ '/home/haanj/.npm/project1/0.1.0/package.tgz',
12 verbose tar pack   '/home/haanj/code/401/package-manager' ]
13 verbose tarball /home/haanj/.npm/project1/0.1.0/package.tgz
14 verbose folder /home/haanj/code/401/package-manager
15 verbose addLocalTarball adding from inside cache /home/haanj/.npm/project1/0.1.0/package.tgz
16 verbose correctMkdir /home/haanj/.npm correctMkdir not in flight; initializing
17 silly cache afterAdd project1@0.1.0
18 verbose afterAdd /home/haanj/.npm/project1/0.1.0/package/package.json not in flight; writing
19 verbose correctMkdir /home/haanj/.npm correctMkdir not in flight; initializing
20 verbose afterAdd /home/haanj/.npm/project1/0.1.0/package/package.json written
21 silly publish { name: 'project1',
21 silly publish   version: '0.1.0',
21 silly publish   description: 'Code Fellows Package Manager is a Code Fellows 401 project to create a private package manager',
21 silly publish   main: 'index.js',
21 silly publish   directories: { test: 'test' },
21 silly publish   scripts: { test: 'echo "Error: no test specified" && exit 1' },
21 silly publish   author: { name: 'Joshua Haan' },
21 silly publish   license: 'ISC',
21 silly publish   dependencies:
21 silly publish    { bcrypt: '^0.8.5',
21 silly publish      'body-parser': '^1.15.0',
21 silly publish      express: '^4.13.4',
21 silly publish      formidable: '^1.0.17',
21 silly publish      jsonwebtoken: '^5.7.0',
21 silly publish      mongoose: '^4.4.10',
21 silly publish      path: '^0.12.7' },
21 silly publish   devDependencies:
21 silly publish    { chai: '^3.5.0',
21 silly publish      'chai-http': '^2.0.1',
21 silly publish      gulp: '^3.9.1',
21 silly publish      'gulp-eslint': '^2.0.0',
21 silly publish      'gulp-mocha': '^2.2.0' },
21 silly publish   readme: '#  CFPM\n\n> Code Fellows Package Manger - create your own personal package manager\n#### About\nCode Fellows Package Manager was created by Joshua Haan and Seth Moore for Code Fellows 401 project. The purpose is to allow users to create a lightweight, private package manager that can be installed on any server/computer.\n\n#### Features\n\n- Files only accessible through CRUD routes: potential for private packages\n- Installable through NPM\n- Corresponding CLI\n- Version control: publish and request specific versions\n- Author authorization\n\n#### Installation\n\nInstall onto your server with NPM\n`npm install cfpm`\n\nSet desired server port and mongodb url as environment variables or by creating a .config.js file in root:\n```\nmodule.exports.DB = \'your:uri-goes.here\'\nmodule.exports.S_PORT = 3000\n```\n\n#### Routes\n\nUsing the CLI is recommended, but CFPM can take HTTP requests from custom clients fairly easily.\n`npm i -g cfpm-cli`\n\n\n##### /Login\n\nThis route takes authorization header with a username and password and returns a token on the res object if the account exists. For demo purposes, this server does not allow for account creation, but two test accounts are created on startup:\n```\n{\n  userName: \'haanj\',\n  name: \'Joshua\',\n  password: \'password123\'\n}\n{\n  userName: \'seth\',\n  name: \'seth\',\n  password: \'seth\'\n}\n```\n\n#### /projects\n\n##### POST\nPOST requests to /projects will create a new package, if none exists. Requests must include an authentication token or they will be rejected. Request headers must also include a projectname and version parameters. If the package does not exist, a new package will be created with that version number, and the attached file will be stored on the server.\n\n##### PUT\nPUT requests to /projects will update an existing package to a new version. Requests must include an authentication token belonging to the original package author, or they will be rejected. Request headers must also include a projectname and version parameters. If the package exists and the version number is incremental, the package will be updated and the attached file will be stored on the server as the current version of the package.\n\n##### GET\nGET requests to /projects will return a stored file corresponding tot he requested package number. GET requests require the request header to include a projectname parameter. A version parameter may optionally be included to return a specific version. If the version parameter is missing or is incorrect, the latest version will be returned as a response.\n',
21 silly publish   readmeFilename: 'README.md',
21 silly publish   gitHead: 'a9f867def968be7818d35a204ff39c67b610f986',
21 silly publish   _id: 'project1@0.1.0',
21 silly publish   _shasum: '26f13d82b41796692de5106a79e2af9e065fe7be',
21 silly publish   _from: '.' }
22 verbose getPublishConfig undefined
23 silly mapToRegistry name project1
24 silly mapToRegistry using default registry
25 silly mapToRegistry registry https://registry.npmjs.org/
26 silly mapToRegistry uri https://registry.npmjs.org/project1
27 verbose publish registryBase https://registry.npmjs.org/
28 silly publish uploading /home/haanj/.npm/project1/0.1.0/package.tgz
29 verbose request uri https://registry.npmjs.org/project1
30 verbose request sending authorization for write operation
31 info attempt registry request try #1 at 14:35:30
32 verbose request using bearer token for auth
33 verbose request id 2ddb362a8914c5ab
34 http request PUT https://registry.npmjs.org/project1
35 http 403 https://registry.npmjs.org/project1
36 verbose headers { 'content-type': 'application/json',
36 verbose headers   'cache-control': 'max-age=300',
36 verbose headers   'content-length': '100',
36 verbose headers   'accept-ranges': 'bytes',
36 verbose headers   date: 'Thu, 31 Mar 2016 21:35:32 GMT',
36 verbose headers   via: '1.1 varnish',
36 verbose headers   connection: 'keep-alive',
36 verbose headers   'x-served-by': 'cache-sjc3120-SJC',
36 verbose headers   'x-cache': 'MISS',
36 verbose headers   'x-cache-hits': '0',
36 verbose headers   'x-timer': 'S1459460131.904465,VS0,VE205' }
37 verbose request invalidating /home/haanj/.npm/registry.npmjs.org/project1 on PUT
38 error publish Failed PUT 403
39 verbose stack Error: You do not have permission to publish 'project1'. Are you logged in as the correct user? : project1
39 verbose stack     at makeError (/home/haanj/.node/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:264:12)
39 verbose stack     at CachingRegistryClient.<anonymous> (/home/haanj/.node/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:252:14)
39 verbose stack     at Request._callback (/home/haanj/.node/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:172:14)
39 verbose stack     at Request.self.callback (/home/haanj/.node/lib/node_modules/npm/node_modules/request/request.js:199:22)
39 verbose stack     at emitTwo (events.js:87:13)
39 verbose stack     at Request.emit (events.js:172:7)
39 verbose stack     at Request.<anonymous> (/home/haanj/.node/lib/node_modules/npm/node_modules/request/request.js:1036:10)
39 verbose stack     at emitOne (events.js:82:20)
39 verbose stack     at Request.emit (events.js:169:7)
39 verbose stack     at IncomingMessage.<anonymous> (/home/haanj/.node/lib/node_modules/npm/node_modules/request/request.js:963:12)
40 verbose statusCode 403
41 verbose pkgid project1
42 verbose cwd /home/haanj/code/401/package-manager
43 error Linux 4.2.0-30-generic
44 error argv "/home/haanj/.node/bin/node" "/home/haanj/.node/bin/npm" "publish"
45 error node v4.3.1
46 error npm  v3.8.2
47 error code E403
48 error You do not have permission to publish 'project1'. Are you logged in as the correct user? : project1
49 error If you need help, you may report this error at:
49 error     <https://github.com/npm/npm/issues>
50 verbose exit [ 1, true ]
